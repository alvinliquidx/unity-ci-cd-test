name: Build Test
run-name: ${{ github.actor }} pushed to ${{ github.ref_name }} branch, creating a new build

on:
  push:
    branches: [dev]

jobs:
  build:
    permissions: write-all
    name: Building the project
    runs-on: ubuntu-latest
    environment: 'dev'
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: Build
          path: build
  slack:
      name: Posting build status to slack
      runs-on: ubuntu-latest
      needs: build
      if: ${{ always() }}
      steps:
        # Post to slack
        - name: Post to Slack
          uses: slackapi/slack-github-action@v1.24.0
          if: needs.build.result == 'success'
          with:
            channel-id: ${{ secrets[format('{0}_BUILD_BOT_SLACK_CHANNEL_ID', github.ref_name )] }}
            payload: |
              {
                "text": "GitHub Build Report",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub build status: ${{ needs.build.result }} :white_check_mark:"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Github Action"
                        },
                        "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      },
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Triggering Push"
                        },
                        "url": "${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                      }
                    ]
                  }
                ]
              }
          env:
            SLACK_BOT_TOKEN: ${{ secrets.BUILD_BOT_SLACK_BOT_TOKEN }}

        - name: Post to Slack
          uses: slackapi/slack-github-action@v1.24.0
          if: needs.build.result != 'success'
          with:
            channel-id: ${{ secrets[format('{0}_BUILD_BOT_SLACK_CHANNEL_ID', github.ref_name )] }}
            payload: |
              {
                "text": "GitHub Build Report",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub build status: ${{ needs.build.result }} :octagonal_sign:"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Github Action"
                        },
                        "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      },
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Triggering Push"
                        },
                        "url": "${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                      }
                    ]
                  }
                ]
              }
          env:
            SLACK_BOT_TOKEN: ${{ secrets.BUILD_BOT_SLACK_BOT_TOKEN }}
  deploy:
    name: Deploying build
    runs-on: ubuntu-latest
    needs: build
    env:
      BUCKET: ${{ vars[format('{0}_AWS_S3_BUCKET', github.ref_name )] }}
      DISTRIBUTION: ${{ vars[format('{0}_AWS_DISTRIBUTION', github.ref_name )] }}
    steps:
      - uses: actions/checkout@v4.1.1
        name: Checkout

      - uses: actions/download-artifact@v4
        with:
          name: Build
          path: build
          
      - uses: aws-actions/configure-aws-credentials@v4.0.1
        name: Configure AWS credentials
        with:
          aws-region: ap-southeast-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          role-skip-session-tagging: true

      - name: "[Deploy Phase 0] Check Identity"
        working-directory: build
        run: aws sts get-caller-identity

      - name: "[Deploy Phase 1] Sync everything from build dir to S3 bucket"
        working-directory: build
        run: aws s3 sync . s3://$BUCKET --delete

      - name: "[Deploy Phase 2] Brotli-compressed files"
        working-directory: build
        run: |
          aws s3 cp . s3://$BUCKET \
              --exclude="*" --include="*.br" \
              --content-encoding br \
              --content-type="binary/octet-stream" \
              --metadata-directive REPLACE --recursive;

      - name: "[Deploy Phase 3] Brotli-compressed Javascript"
        working-directory: build
        run: |
          aws s3 cp . s3://$BUCKET \
              --exclude="*" --include="*.js.br" \
              --content-encoding br \
              --content-type="application/javascript" \
              --metadata-directive REPLACE --recursive;

      - name: "[Deploy Phase 4] Brotli-compressed WASM"
        working-directory: build
        run: |
          aws s3 cp . s3://$BUCKET \
              --exclude="*" --include="*.wasm.br" \
              --content-encoding br \
              --content-type="application/wasm" \
              --metadata-directive REPLACE --recursive;

      - name: Invalidate CloudFront distribution
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION }} --paths /*
  slack-deploy:
      name: Posting deploy status to slack
      runs-on: ubuntu-latest
      needs: deploy
      if: ${{ always() }}
      steps:
        # Post to slack
        - name: Post to Slack
          uses: slackapi/slack-github-action@v1.24.0
          if: needs.deploy.result == 'success'
          with:
            channel-id: ${{ secrets[format('{0}_BUILD_BOT_SLACK_CHANNEL_ID', github.ref_name )] }}
            payload: |
              {
                "text": "GitHub Build Report",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub deploy status: ${{ needs.deploy.result }} :white_check_mark:"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Github Action"
                        },
                        "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      },
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Triggering Push"
                        },
                        "url": "${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                      }
                    ]
                  }
                ]
              }
          env:
            SLACK_BOT_TOKEN: ${{ secrets.BUILD_BOT_SLACK_BOT_TOKEN }}

        - name: Post to Slack
          uses: slackapi/slack-github-action@v1.24.0
          if: needs.deploy.result != 'success'
          with:
            channel-id: ${{ secrets[format('{0}_BUILD_BOT_SLACK_CHANNEL_ID', github.ref_name )] }}
            payload: |
              {
                "text": "GitHub Build Report",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub deploy status: ${{ needs.deploy.result }} :octagonal_sign:"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Github Action"
                        },
                        "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      },
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Triggering Push"
                        },
                        "url": "${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                      }
                    ]
                  }
                ]
              }
          env:
            SLACK_BOT_TOKEN: ${{ secrets.BUILD_BOT_SLACK_BOT_TOKEN }}